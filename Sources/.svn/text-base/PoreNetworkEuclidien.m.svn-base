classdef PoreNetworkEuclidien < PoreNetwork
    %PoreNetworkEuclidien Summary of this class goes here
    %   Detailed explanation goes here
    
    properties 
        PoreCenter %tableau (NombrePores,Dimension) contenant les coordonnées des centres des pores
        LinkCenter %tableau (NombreFaces,Dimension) contenant les coordonnées des centres des liens
    end
    
    methods

        function pore_network_euclidien=PoreNetworkEuclidien(dimension,pores,owners,neighbours,boundaries,poreCenter,linkCenter)
            pore_network_euclidien=pore_network_euclidien@PoreNetwork(dimension,pores,owners,neighbours,boundaries);
            
            pore_network_euclidien.PoreCenter=poreCenter;
            pore_network_euclidien.LinkCenter=linkCenter;
            
        end
        
        
        function center=GetPoreCenter(poreNetwork,iPore)
            center=poreNetwork.PoreCenter(iPore,:);
        end      
        
        function center=GetLinkCenter(poreNetwork,iLink)
            center=poreNetwork.LinkCenter(iLink,:);
        end
        

        function ExportToBabe(network,numInlet,numOutlet)
            file_name='Geometry';
            writer=FileWriterBabe(file_name);
            tic;
            disp('G�n�ration du fichier Geometry pour Babe...');
            donnees_output=network.BabeOutputStruct(numInlet,numOutlet);
            writer.Write(donnees_output);
            duree=toc;minutes=floor(duree/60);secondes=duree-60*minutes;
            fprintf('Fichier Geometry genere. Dur�e : %d minutes %f s. \n',minutes,secondes);
            writer.delete;clear('writer','file_name','file_content','donnees_output','duree','minutes','secondes');
        end
        
        
        
        function babe_struct=BabeOutputStruct(network,numInlet,numOutlet)
            %cr�ation en m�moire de la structure d'un fichier Geometry du
            %code Babe (code PNM C++ du CEA)
                        
            
            nPore=network.GetNumberOfPores;
            nLink=network.GetNumberOfLinks;
            nAgglomerate=0;
            nConnexion=0;
            
            %Partie du fichier NetworkSize
            
            babe_struct.NetworkPosition=[0 0 0];
            
            babe_struct.NetworkLength=[ 1 1 1  ];   %TO DO !!!!!!!!!!!!!!!!!!!!!!!!!
            
            
            %Partie du fichier Pores
            
            babe_struct.NumberOfPores=nPore;
            domain='CCL';
            shape='Spherical';
            numericData=cell(1,nPore);
            stringData=cell(1,nPore);
            
            for iPore=1:nPore
                diameter=network.GetPoreDiameter(iPore);
                center=network.GetPoreCenter(iPore);
                numericData{iPore}=[iPore-1,diameter,center(1),center(2),center(3)];
                stringData{iPore}{1}=domain;
                stringData{iPore}{2}=shape;
            end
            
            
            babe_struct.Pores.NumericData=numericData;
            babe_struct.Pores.StringData=stringData;
            
            
            %Partie du fichier Throats
            
            babe_struct.NumberOfThroats=nLink;
            domain='CCL';
            shape='Spherical';
            numericData=cell(1,nLink);
            stringData=cell(1,nLink);
            
            for iLink=1:nLink
                diameter=network.GetLinkDiameter(iLink);
                center=network.GetLinkCenter(iLink);
                numericData{iLink}=[iLink-1,diameter,center(1),center(2),center(3)];
                stringData{iLink}{1}=domain;
                
                numFrontiere=network.GetFrontiereOfLink(iLink);
                
                if ismember(numFrontiere,numOutlet)
                    boundaryType='Exit';
                    
                elseif numFrontiere==0
                    boundaryType='Initialized';
                    
                else
                    boundaryType='BoundaryInitialized';
                end
                
                stringData{iLink}{2}=boundaryType;
                stringData{iLink}{3}=shape;
            end

            babe_struct.Throats.NumericData=numericData;
            babe_struct.Throats.StringData=stringData;
            
            
            %Partie du fichier Agglomerates
            
            babe_struct.NumberOfAgglomerates=nAgglomerate;
            
            numericData=cell(1,nAgglomerate);
            stringData=cell(1,nAgglomerate);
            
            babe_struct.Agglomerates.NumericData=numericData;
            babe_struct.Agglomerates.StringData=stringData;
            
            
            %Partie du fichier Connexions
            
            babe_struct.NumberOfConnexions=nConnexion;
            
            numericData=cell(1,nConnexion);
            stringData=cell(1,nConnexion);
            
            babe_struct.Connexions.NumericData=numericData;
            babe_struct.Connexions.StringData=stringData;
            
            
            %Partie du fichier PoreLinking
            
            poreLinking=cell(1,nPore);
            for iPore=1:nPore
                poreLinking{iPore}=[iPore-1,network.GetLinksOfPore(iPore)-1];
            end
            babe_struct.PoreLinking=poreLinking;
            
            
            %Partie du fichier ThroatLinking
            
            throatLinking=cell(1,nPore);
            for iLink=1:nLink
                poreOfLink=network.GetPoresOfLink(iLink);
                throatLinking{iLink}=[iLink-1,poreOfLink(poreOfLink>0)-1];
            end
            babe_struct.ThroatLinking=throatLinking;
            
            
            %Partie du fichier AgglomerateToPoreLinking
            
            agglomeratesToPoreLinking=cell(1,nAgglomerate);
            babe_struct.AgglomeratesToPoreLinking=agglomeratesToPoreLinking;
            
            
            %Partie du fichier ConnexionLinking           
            
            connexionToPoreLinking=cell(1,nConnexion);
            babe_struct.ConnexionLinking=connexionToPoreLinking;

        end       
        

        
    end

end